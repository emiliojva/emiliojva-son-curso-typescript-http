{"version":3,"file":"http.js","sourceRoot":"","sources":["../../../src/http/http.ts"],"names":[],"mappings":";;;IAAA,IAAK,SAGJ;IAHD,WAAK,SAAS;QACZ,wBAAa,CAAA;QACb,0BAAc,CAAA;IAChB,CAAC,EAHI,SAAS,KAAT,SAAS,QAGb;IAAA,CAAC;IAEF;QAAA;QAoDA,CAAC;QAlDC,kBAAG,GAAH,UAAI,QAAe;YAAnB,iBAMC;YALC,OAAO,IAAI,OAAO,CAAE,UAAC,OAAO,EAAC,MAAM;gBACjC,IAAI,KAAK,GAAkB,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,EAAC,QAAQ,CAAC,CAAC;gBACpE,KAAI,CAAC,kBAAkB,CAAC,KAAK,EAAC,OAAO,EAAC,MAAM,CAAC,CAAC;gBAC9C,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,kBAAkB;YAClC,CAAC,CAAC,CAAC;QACL,CAAC;QAED;;;;WAIG;QACK,0BAAW,GAAnB,UAAoB,IAAe,EAAE,QAAe;YAElD,IAAM,KAAK,GAAG,IAAI,cAAc,EAAE,CAAC,CAAC,oDAAoD;YACxF,KAAK,CAAC,IAAI,CAAE,IAAI,EAAG,QAAQ,CAAE,CAAC;YAC9B,OAAO,KAAK,CAAC;QACf,CAAC;QAED;;;;;WAKG;QACK,iCAAkB,GAA1B,UAA2B,KAAqB,EAAE,OAAO,EAAE,MAAM;YAC7D;;;;aAIC;YACH,KAAK,CAAC,kBAAkB,GAAG,UAAS,KAAW;gBAC7C,sBAAsB;gBACtB,IAAG,IAAI,CAAC,UAAU,IAAI,CAAC,EAAC,EAAE,sBAAsB;oBAE9C,IAAG,IAAI,CAAC,MAAM,IAAI,GAAG,EAAC;wBACpB,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;qBAC7B;oBAED,IAAG,IAAI,CAAC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,EAAC;wBAC1C,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;qBAC5B;iBAEF;YAEH,CAAC,CAAC;QAEJ,CAAC;QAEH,WAAC;IAAD,CAAC,AApDD,IAoDC","sourcesContent":["enum httpVerbs  {\r\n  GET   = 'GET',\r\n  POST  = 'POST'\r\n};\r\n\r\nexport default class Http {\r\n\r\n  get(endpoint:string){\r\n    return new Promise( (resolve,reject )=>{\r\n      let xhttp:XMLHttpRequest = this.createXhttp(httpVerbs.GET,endpoint);\r\n      this.configureCallbacks(xhttp,resolve,reject);\r\n      xhttp.send(); // no data to send\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Cria uma requisicao ajax\r\n   * @param verb \r\n   * @param endpoint \r\n   */\r\n  private createXhttp(verb: httpVerbs, endpoint:string)\r\n  {\r\n    const xhttp = new XMLHttpRequest(); // objeto representando requisicoes assicronas(ajax)\r\n    xhttp.open( verb , endpoint );\r\n    return xhttp;\r\n  }\r\n\r\n  /**\r\n   * Configura os manipuladores de retorno de sucesso ou falha\r\n   * @param xhttp \r\n   * @param resolve \r\n   * @param reject \r\n   */\r\n  private configureCallbacks(xhttp: XMLHttpRequest, resolve, reject){\r\n      /**\r\n     * Para pegar a reservada this do contexto do evento é necessario usar a notação com function(){}\r\n     * Usando a notação (event):any=>{} não possui acesso ao this do evento e sim da Classe\r\n     * ref: https://pt.stackoverflow.com/questions/143399/qual-a-diferen%C3%A7a-entre-function-e-por-que-n%C3%A3o-funciona-o-http-ge\r\n     */\r\n    xhttp.onreadystatechange = function(event:Event):void {\r\n      // console.log(event);\r\n      if(this.readyState == 4){ // status OK do client\r\n        \r\n        if(this.status == 200){\r\n          resolve(xhttp.responseText);\r\n        }\r\n\r\n        if(this.status == 400 || this.status == 500){\r\n          reject(xhttp.responseText);\r\n        }\r\n\r\n      }\r\n      \r\n    };\r\n\r\n  }\r\n\r\n}"]}