{"version":3,"file":"test.js","sourceRoot":"","sources":["../../src/test.ts"],"names":[],"mappings":";;;IAKA,gDAAgD;IAChD,mCAAmC;IACnC,KAAK;IAEL,8CAA8C;IAC9C,oDAAoD;IACpD,8CAA8C;IAE9C,sBAAsB;IACtB,KAAK;IAEL,iDAAiD;IAEjD,IAAI,mBAAQ,EAAE,CAAC,KAAK,EAAE,CAAC,IAAI,CAAE,UAAC,KAAgB;QAE5C,6CAA6C;QAE7C,IAAI,sBAAS,CAAC,iBAAiB,EAAE,CAAC,MAAM,EAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;IAE5D,CAAC,CAAC,CAAC,CAAC,uCAAuC","sourcesContent":["import 'module1';\r\nimport PostHttp from './http/post-http';\r\nimport { Response } from './http/response';\r\nimport {PostTable} from './components/post-table';\r\n\r\n// const meuMetodo = ( jsonString: string ) => {\r\n//   return JSON.parse(jsonString);\r\n// };\r\n\r\n// const getPosts = ( response:Response ) => {\r\n//   // hidratar resultado para Classes do tipo Post\r\n//   let hidratado = meuMetodo(response.body);\r\n  \r\n//   return hidratado;\r\n// };\r\n\r\n// const error = ():any=>{ return \"faca algo\" }; \r\n\r\nnew PostHttp().query().then( (posts:Array<any>)=>{\r\n  \r\n  // let posts:Array<any> = getPosts(response);\r\n  \r\n  new PostTable('#my-table>tbody', ['nome','preco'], posts);\r\n\r\n}); //new PostHttp().query(getPosts,error);\r\n\r\n\r\n"]}